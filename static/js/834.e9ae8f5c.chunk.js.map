{"version":3,"file":"static/js/834.e9ae8f5c.chunk.js","mappings":"6OAAA,MAAMA,EAAgB,YAEhBC,EAAmB,CACvB,CACEC,GAAI,IACJC,SAAU,IACVC,MAAO,qGACPC,KAAM,mCAER,CACEH,GAAI,IACJC,SAAU,IACVC,MAAO,+IACPC,KAAM,uCAIV,SAASC,EAAiBC,GACxBC,aAAaC,QAAQT,EAAeU,KAAKC,UAAUJ,GACrD,CAEO,SAASK,IACd,MAAMC,EAAOL,aAAaM,QAAQd,GAClC,IAAKa,EAEH,OADAL,aAAaC,QAAQT,EAAeU,KAAKC,UAAUV,IAC5CA,EAET,IACE,OAAOS,KAAKK,MAAMF,EACpB,CAAE,MAAOG,GAEP,OADAC,QAAQC,MAAM,kGAA6BF,GACpC,EACT,CACF,C,uBCvBA,MAAM,OAAEG,GAAWC,EAAAA,EAENC,EAAkBA,KAC7B,MAAMC,GAAcC,EAAAA,EAAAA,MACdC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,KACHJ,GAAoC,YAArBA,EAAYK,MAC9BH,EAAS,IACX,GACC,CAACF,EAAaE,IAEjB,MAAOI,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAaC,IAAkBJ,EAAAA,EAAAA,WAAS,IACxCK,GAAQC,EAAAA,EAAKC,WAEpBX,EAAAA,EAAAA,YAAU,KAER,MAAMY,EAAM1B,IACZiB,EAAaS,GAEb,MAAMC,GAAIC,EAAAA,EAAAA,MACVR,EAAWO,EAAE,GACZ,IAEH,MAAME,EAAU,CACd,CACErC,MAAO,mDACPsC,UAAW,QACXC,IAAK,SAEP,CACEvC,MAAO,uCACPsC,UAAW,OACXC,IAAK,OACLC,OAASC,IACPC,EAAAA,EAAAA,KAAA,KAAGC,KAAMF,EAAMG,OAAO,SAASC,IAAI,aAAYC,SAC5CL,KAIP,CACEzC,MAAO,oCACPsC,UAAW,WACXC,IAAK,YAEP,CACEvC,MAAO,mDACPuC,IAAK,UACLC,OAAQA,CAACC,EAAMM,KACbL,EAAAA,EAAAA,KAACM,EAAAA,GAAM,CAACC,QAAM,EAACC,QAASA,IAAMC,EAAaJ,EAAOjD,IAAIgD,SAAC,iDAOvDK,EAAgBrD,KDzBjB,SAAwBA,GAC7B,IAAIK,EAAOK,IACXL,EAAOA,EAAKiD,QAAQC,GAASA,EAAKvD,KAAOA,IACzCI,EAAiBC,EACnB,CCsBImD,CAAexD,GACf2B,GAAc8B,GAASA,EAAKH,QAAQI,GAAMA,EAAE1D,KAAOA,KAAI,EASnD2D,EAAaA,KACjB3B,GAAe,GACfC,EAAK2B,aAAa,EAapB,OACEC,EAAAA,EAAAA,MAAA,OAAAb,SAAA,EACEJ,EAAAA,EAAAA,KAAA,MAAAI,SAAI,mJACJJ,EAAAA,EAAAA,KAACM,EAAAA,GAAM,CAACY,KAAK,UAAUV,QAvBTW,KAChB/B,GAAe,EAAK,EAsByBgC,MAAO,CAAEC,aAAc,IAAKjB,SAAC,uGAIxEJ,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CAAC3B,QAASA,EAAS4B,WAAYzC,EAAW0C,OAAO,QAEvDxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CAACnE,MAAM,oGAAoBoE,QAASvC,EAAawC,SAAUZ,EAAYa,KAlB9DC,KACjBxC,EAAKyC,iBAAiBC,MAAMC,IAC1B,MAAM,MAAE1E,EAAK,KAAEC,EAAI,SAAEF,GAAa2E,GDrDjC,SAAwBC,GAC7B,MAAMxE,EAAOK,IACPoE,EAAQC,OAAOC,KAAKC,OACpBC,GAAMC,EAAAA,EAAAA,GAAA,CAAKnF,GAAI8E,GAAUD,GAC/BxE,EAAK+E,KAAKF,GACV9E,EAAiBC,EAEnB,CC+CMgF,CAAe,CAAEnF,QAAOC,OAAMF,aAC9B0B,EAAajB,KACbiD,GAAY,GACZ,EAY8FX,UAC5Fa,EAAAA,EAAAA,MAAC3B,EAAAA,EAAI,CAACD,KAAMA,EAAMqD,OAAO,WAAUtC,SAAA,EACjCJ,EAAAA,EAAAA,KAACV,EAAAA,EAAKqD,KAAI,CAACC,MAAM,mDAAWC,KAAK,QAAQC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gGAAsB5C,UAChGJ,EAAAA,EAAAA,KAACiD,EAAAA,EAAK,OAERjD,EAAAA,EAAAA,KAACV,EAAAA,EAAKqD,KAAI,CAACC,MAAM,uCAASC,KAAK,OAAOC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oFAAoB5C,UAC3FJ,EAAAA,EAAAA,KAACiD,EAAAA,EAAK,OAERjD,EAAAA,EAAAA,KAACV,EAAAA,EAAKqD,KAAI,CAACC,MAAM,2BAAOC,KAAK,WAAWC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,8EAAmB5C,UAC5FJ,EAAAA,EAAAA,KAAC1B,EAAAA,EAAM,CAAC4E,YAAY,4EAAe9C,SAChCnB,EAAQkE,KAAK1D,IACZwB,EAAAA,EAAAA,MAAC5C,EAAM,CAAY+E,MAAO3D,EAAErC,GAAGgD,SAAA,CAC5BX,EAAEnC,MAAM,QAAMmC,EAAErC,GAAG,MADTqC,EAAErC,iBAQrB,C","sources":["entities/material/model/materialStorage.js","pages/TeacherZonePage/ui/TeacherZonePage.jsx"],"sourcesContent":["const MATERIALS_KEY = 'materials'\n\nconst initialMaterials = [\n  {\n    id: '1',\n    courseId: '1',\n    title: 'Лекции по алгебре (PDF)',\n    link: 'https://example.com/algebra.pdf',\n  },\n  {\n    id: '2',\n    courseId: '2', // курс \"Физика\"\n    title: 'Презентация по кинематике',\n    link: 'https://example.com/kinematics.ppt',\n  },\n]\n\nfunction saveAllMaterials(list) {\n  localStorage.setItem(MATERIALS_KEY, JSON.stringify(list))\n}\n\nexport function getAllMaterials() {\n  const data = localStorage.getItem(MATERIALS_KEY)\n  if (!data) {\n    localStorage.setItem(MATERIALS_KEY, JSON.stringify(initialMaterials))\n    return initialMaterials\n  }\n  try {\n    return JSON.parse(data)\n  } catch (e) {\n    console.error('Ошибка парсинга materials', e)\n    return []\n  }\n}\n\nexport function createMaterial(materialData) {\n  const list = getAllMaterials()\n  const newId = String(Date.now())\n  const newMat = { id: newId, ...materialData }\n  list.push(newMat)\n  saveAllMaterials(list)\n  return newMat\n}\n\nexport function deleteMaterial(id) {\n  let list = getAllMaterials()\n  list = list.filter((item) => item.id !== id)\n  saveAllMaterials(list)\n}\n\nexport function getMaterialsByCourse(courseId) {\n  const list = getAllMaterials()\n  return list.filter((item) => item.courseId === courseId)\n}\n","// pages/TeacherZonePage/ui/TeacherZonePage.jsx\nimport React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { Button, Form, Input, Modal, Select, Table } from 'antd'\n\nimport { getAllCourses } from '../../../entities/course/model/courseStorage'\nimport { createMaterial, deleteMaterial, getAllMaterials } from '../../../entities/material/model/materialStorage'\nimport { getSession } from '../../../features/auth/model/session'\n\nconst { Option } = Select\n\nexport const TeacherZonePage = () => {\n  const sessionUser = getSession()\n  const navigate = useNavigate()\n\n  // Если пользователь не teacher, перенаправим на главную\n  useEffect(() => {\n    if (!sessionUser || sessionUser.role !== 'teacher') {\n      navigate('/')\n    }\n  }, [sessionUser, navigate])\n\n  const [materials, setMaterials] = useState([])\n  const [courses, setCourses] = useState([])\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [form] = Form.useForm()\n\n  useEffect(() => {\n    // Загрузим все материалы и курсы\n    const mat = getAllMaterials()\n    setMaterials(mat)\n\n    const c = getAllCourses()\n    setCourses(c)\n  }, [])\n\n  const columns = [\n    {\n      title: 'Название',\n      dataIndex: 'title',\n      key: 'title',\n    },\n    {\n      title: 'Ссылка',\n      dataIndex: 'link',\n      key: 'link',\n      render: (text) => (\n        <a href={text} target=\"_blank\" rel=\"noreferrer\">\n          {text}\n        </a>\n      ),\n    },\n    {\n      title: 'ID курса',\n      dataIndex: 'courseId',\n      key: 'courseId',\n    },\n    {\n      title: 'Действия',\n      key: 'actions',\n      render: (text, record) => (\n        <Button danger onClick={() => handleDelete(record.id)}>\n          Удалить\n        </Button>\n      ),\n    },\n  ]\n\n  const handleDelete = (id) => {\n    deleteMaterial(id)\n    setMaterials((prev) => prev.filter((m) => m.id !== id))\n  }\n\n  // Открыть модал для добавления материала\n  const openModal = () => {\n    setIsModalOpen(true)\n  }\n\n  // Закрыть\n  const closeModal = () => {\n    setIsModalOpen(false)\n    form.resetFields()\n  }\n\n  // Сохранить\n  const handleSave = () => {\n    form.validateFields().then((values) => {\n      const { title, link, courseId } = values\n      createMaterial({ title, link, courseId })\n      setMaterials(getAllMaterials())\n      closeModal()\n    })\n  }\n\n  return (\n    <div>\n      <h2>Teacher Zone: Управление материалами</h2>\n      <Button type=\"primary\" onClick={openModal} style={{ marginBottom: 16 }}>\n        Добавить материал\n      </Button>\n\n      <Table columns={columns} dataSource={materials} rowKey=\"id\" />\n\n      <Modal title=\"Добавить материал\" visible={isModalOpen} onCancel={closeModal} onOk={handleSave}>\n        <Form form={form} layout=\"vertical\">\n          <Form.Item label=\"Название\" name=\"title\" rules={[{ required: true, message: 'Введите название' }]}>\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Ссылка\" name=\"link\" rules={[{ required: true, message: 'Введите ссылку' }]}>\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Курс\" name=\"courseId\" rules={[{ required: true, message: 'Выберите курс' }]}>\n            <Select placeholder=\"Выберите курс\">\n              {courses.map((c) => (\n                <Option key={c.id} value={c.id}>\n                  {c.title} (ID {c.id})\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  )\n}\n"],"names":["MATERIALS_KEY","initialMaterials","id","courseId","title","link","saveAllMaterials","list","localStorage","setItem","JSON","stringify","getAllMaterials","data","getItem","parse","e","console","error","Option","Select","TeacherZonePage","sessionUser","getSession","navigate","useNavigate","useEffect","role","materials","setMaterials","useState","courses","setCourses","isModalOpen","setIsModalOpen","form","Form","useForm","mat","c","getAllCourses","columns","dataIndex","key","render","text","_jsx","href","target","rel","children","record","Button","danger","onClick","handleDelete","filter","item","deleteMaterial","prev","m","closeModal","resetFields","_jsxs","type","openModal","style","marginBottom","Table","dataSource","rowKey","Modal","visible","onCancel","onOk","handleSave","validateFields","then","values","materialData","newId","String","Date","now","newMat","_objectSpread","push","createMaterial","layout","Item","label","name","rules","required","message","Input","placeholder","map","value"],"sourceRoot":""}