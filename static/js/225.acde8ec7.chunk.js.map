{"version":3,"file":"static/js/225.acde8ec7.chunk.js","mappings":"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","sources":["entities/course/model/courseStorage.js","entities/schedule/model/scheduleStorage.js","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","shared/ui/Card/Card.jsx","pages/DashboardPage/ui/DashboardPage.jsx"],"sourcesContent":["const STORAGE_KEY = \"courses\";\n\nconst initialCourses = [\n    {\n        id: \"1\",\n        title: \"Математика\",\n        description: \"Базовый курс по математике\",\n        teacherId: \"teacher\",\n    },\n    {\n        id: \"2\",\n        title: \"Физика\",\n        description: \"Введение в механику\",\n        teacherId: \"teacher\",\n    },\n];\n\nexport function getAllCourses() {\n    const data = localStorage.getItem(STORAGE_KEY);\n    if (!data) {\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(initialCourses));\n        return initialCourses;\n    }\n    try {\n        return JSON.parse(data);\n    } catch (e) {\n        console.error(\"Ошибка парсинга курсов из localStorage\", e);\n        return [];\n    }\n}\n\n// Функция поиска курса по id\nexport function getCourseById(id) {\n    const courses = getAllCourses();\n    return courses.find((c) => c.id === id) || null;\n}\n\n// Сохранить весь массив курсов\nfunction saveAllCourses(courses) {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(courses));\n}\n\n// Создать новый курс\nexport function createCourse(courseData) {\n    const courses = getAllCourses();\n    // Генерация условного ID\n    const newId = String(Date.now());\n    const newCourse = { id: newId, ...courseData };\n    courses.push(newCourse);\n    saveAllCourses(courses);\n    return newCourse;\n}\n\n// Обновить существующий курс\nexport function updateCourse(id, updates) {\n    const courses = getAllCourses();\n    const index = courses.findIndex((c) => c.id === id);\n    if (index === -1) return null;\n\n    courses[index] = { ...courses[index], ...updates };\n    saveAllCourses(courses);\n    return courses[index];\n}\n\n// Удалить курс\nexport function deleteCourse(id) {\n    let courses = getAllCourses();\n    courses = courses.filter((c) => c.id !== id);\n    saveAllCourses(courses);\n}\n","// entities/schedule/model/scheduleStorage.js\n\nconst SCHEDULE_KEY = \"schedule\";\n\n// Какие-то начальные данные (mock)\nconst initialSchedule = [\n    {\n        id: \"101\",\n        courseId: \"1\",      // курс Математика\n        date: \"2025-02-01\", // YYYY-MM-DD\n        time: \"10:00\",      // строка (HH:mm)\n        room: \"Аудитория 305\",\n    },\n    {\n        id: \"102\",\n        courseId: \"2\",      // курс Физика\n        date: \"2025-02-02\",\n        time: \"12:30\",\n        room: \"Лаборатория 2\",\n    },\n];\n\nfunction saveSchedule(scheduleList) {\n    localStorage.setItem(SCHEDULE_KEY, JSON.stringify(scheduleList));\n}\n\n// Получаем все события расписания\nexport function getAllSchedule() {\n    const data = localStorage.getItem(SCHEDULE_KEY);\n    if (!data) {\n        localStorage.setItem(SCHEDULE_KEY, JSON.stringify(initialSchedule));\n        return initialSchedule;\n    }\n    try {\n        return JSON.parse(data);\n    } catch (e) {\n        console.error(\"Ошибка парсинга schedule из localStorage\", e);\n        return [];\n    }\n}\n\n// Добавляем новое событие\nexport function createScheduleEvent(eventData) {\n    const all = getAllSchedule();\n    const newId = String(Date.now());\n    const newEvent = { id: newId, ...eventData };\n    all.push(newEvent);\n    saveSchedule(all);\n    return newEvent;\n}\n\n// Удаляем событие\nexport function deleteScheduleEvent(id) {\n    let all = getAllSchedule();\n    all = all.filter((item) => item.id !== id);\n    saveSchedule(all);\n}\n\n// Можно сделать updateScheduleEvent, если понадобится\n","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;","\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","import React from 'react';\nimport { Button, Card, Col, Typography } from 'antd';\nimport './Card.scss';\n\nconst { Title, Text } = Typography;\n\nconst DashboardCard = ({ title, value, extra, link, linkText }) => (\n    <Col span={8}>\n        <Card className=\"dashboard-card\">\n            <Title level={4}>{title}</Title>\n            <Text className=\"dashboard-card-value\">{value}</Text>\n            {extra && <div className=\"dashboard-card-extra\">{extra}</div>}\n            {link && (\n                <div className=\"dashboard-card-link\">\n                    <Button type=\"primary\"  href={link}>{linkText}</Button>\n                </div>\n            )}\n        </Card>\n    </Col>\n);\n\nexport default DashboardCard;\n","// pages/DashboardPage/ui/DashboardPage.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Row, Col, Typography, Button } from \"antd\";\nimport { getSession } from \"../../../features/auth/model/session\";\nimport { getAllCourses } from \"../../../entities/course/model/courseStorage\";\nimport { getAllSchedule } from \"../../../entities/schedule/model/scheduleStorage\";\nimport DashboardCard from \"../../../shared/ui/Card/Card\";\n\nconst { Title, Text } = Typography;\n\nexport const DashboardPage = () => {\n    const [user, setUser] = useState(null);\n    const [courses, setCourses] = useState([]);\n    const [schedule, setSchedule] = useState([]);\n    const [closestEvent, setClosestEvent] = useState(null);\n\n    useEffect(() => {\n        const sessionUser = getSession();\n        if (sessionUser) {\n            setUser(sessionUser);\n        }\n\n        // Загрузим все курсы\n        const courseData = getAllCourses();\n        setCourses(courseData);\n\n        // Загрузим все события расписания\n        const scheduleData = getAllSchedule();\n        setSchedule(scheduleData);\n\n        // Найдём ближайшее событие (по дате/времени)\n        if (scheduleData.length > 0) {\n            const now = new Date();\n\n            // Преобразуем \"date\" + \"time\" в Date-объект\n            // и найдём самое ближайшее, которое еще не прошло\n            const upcomingEvents = scheduleData\n                .map((ev) => {\n                    const [year, month, day] = ev.date.split(\"-\");\n                    const [hours, minutes] = ev.time.split(\":\");\n                    const eventDate = new Date(\n                        +year,\n                        +month - 1, // месяцы в JS с 0\n                        +day,\n                        +hours,\n                        +minutes\n                    );\n                    return { ...ev, eventDate };\n                })\n                .filter((ev) => ev.eventDate > now)\n                .sort((a, b) => a.eventDate - b.eventDate);\n\n            if (upcomingEvents.length > 0) {\n                setClosestEvent(upcomingEvents[0]);\n            }\n        }\n    }, []);\n\n    // Подсчитаем, сколько курсов ведёт преподаватель (teacher) и т.д.\n    let teacherCoursesCount = 0;\n    if (user && user.role === \"teacher\") {\n        teacherCoursesCount = courses.filter((c) => c.teacherId === user.login).length;\n    }\n\n    return (\n        <div style={{ padding: \"16px\" }}>\n            <Title level={2}>Добро пожаловать, {user?.fullName}!</Title>\n            <Text>\n                Ваша роль: <b>{user?.role === \"teacher\" ? \"Преподаватель\" : \"Студент\"}</b>\n            </Text>\n\n            <Row gutter={[16, 16]} style={{ marginTop: 16 }}>\n                <DashboardCard\n                    title=\"Всего курсов:\"\n                    value={courses.length}\n                    extra={user?.role === \"teacher\" && (\n                        <Text type=\"secondary\">Курсы, которые вы ведёте: <Text strong>{teacherCoursesCount}</Text></Text>\n                    )}\n                    link=\"#/courses\"\n                    linkText=\"Перейти к курсам\"\n                />\n                <DashboardCard\n                    title=\"Расписание:\"\n                    value={`${schedule.length} занятий`}\n                    extra={closestEvent ? (\n                        <div>\n                            <Text type=\"secondary\">Ближайшее занятие:</Text>\n                            <div>\n                                <Text>{closestEvent.date} в {closestEvent.time}, курс ID {closestEvent.courseId}</Text>\n                            </div>\n                        </div>\n                    ) : (\n                        <Text type=\"secondary\">Ближайших занятий не найдено.</Text>\n                    )}\n                    link=\"#/schedule\"\n                    linkText=\"Посмотреть расписание\"\n                />\n                {/*<DashboardCard*/}\n                {/*    title=\"Материалы\"*/}\n                {/*    value=\"Здесь можно показать количество материалов и т.д.\"*/}\n                {/*    link=\"#/teacher-zone\"*/}\n                {/*    linkText=\"Управлять материалами (Teacher Zone)\"*/}\n                {/*/>*/}\n            </Row>\n        </div>\n    );\n};\n"],"names":["STORAGE_KEY","initialCourses","id","title","description","teacherId","getAllCourses","data","localStorage","getItem","setItem","JSON","stringify","parse","e","console","error","getCourseById","find","c","saveAllCourses","courses","createCourse","courseData","newId","String","Date","now","newCourse","_objectSpread","push","updateCourse","updates","index","findIndex","deleteCourse","filter","SCHEDULE_KEY","initialSchedule","courseId","date","time","room","saveSchedule","scheduleList","getAllSchedule","createScheduleEvent","eventData","all","newEvent","deleteScheduleEvent","item","Title","Text","Typography","_ref","value","extra","link","linkText","_jsx","Col","span","children","_jsxs","Card","className","level","Button","type","href","DashboardPage","user","setUser","useState","setCourses","schedule","setSchedule","closestEvent","setClosestEvent","useEffect","sessionUser","getSession","scheduleData","length","upcomingEvents","map","ev","year","month","day","split","hours","minutes","eventDate","sort","a","b","teacherCoursesCount","role","login","style","padding","fullName","Row","gutter","marginTop","DashboardCard","strong","concat"],"sourceRoot":""}