{"version":3,"file":"static/js/315.868c74b9.chunk.js","mappings":"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","sources":["entities/schedule/model/scheduleStorage.js","pages/SchedulePage/ui/SchedulePage.jsx"],"sourcesContent":["// entities/schedule/model/scheduleStorage.js\n\nconst SCHEDULE_KEY = 'schedule'\n\n// Какие-то начальные данные (mock)\nconst initialSchedule = [\n  {\n    id: '101',\n    courseId: '1', // курс Математика\n    date: '2025-02-01', // YYYY-MM-DD\n    time: '10:00', // строка (HH:mm)\n    room: 'Аудитория 305',\n  },\n  {\n    id: '102',\n    courseId: '2', // курс Физика\n    date: '2025-02-02',\n    time: '12:30',\n    room: 'Лаборатория 2',\n  },\n]\n\nfunction saveSchedule(scheduleList) {\n  localStorage.setItem(SCHEDULE_KEY, JSON.stringify(scheduleList))\n}\n\n// Получаем все события расписания\nexport function getAllSchedule() {\n  const data = localStorage.getItem(SCHEDULE_KEY)\n  if (!data) {\n    localStorage.setItem(SCHEDULE_KEY, JSON.stringify(initialSchedule))\n    return initialSchedule\n  }\n  try {\n    return JSON.parse(data)\n  } catch (e) {\n    console.error('Ошибка парсинга schedule из localStorage', e)\n    return []\n  }\n}\n\n// Добавляем новое событие\nexport function createScheduleEvent(eventData) {\n  const all = getAllSchedule()\n  const newId = String(Date.now())\n  const newEvent = { id: newId, ...eventData }\n  all.push(newEvent)\n  saveSchedule(all)\n  return newEvent\n}\n\n// Удаляем событие\nexport function deleteScheduleEvent(id) {\n  let all = getAllSchedule()\n  all = all.filter((item) => item.id !== id)\n  saveSchedule(all)\n}\n\n// Можно сделать updateScheduleEvent, если понадобится\n","// pages/SchedulePage/ui/SchedulePage.jsx\nimport React, { useEffect, useState } from 'react'\n\nimport { Button, DatePicker, Form, Grid, Input, List, Modal, Table, TimePicker } from 'antd'\n\nimport {\n  createScheduleEvent,\n  deleteScheduleEvent,\n  getAllSchedule,\n} from '../../../entities/schedule/model/scheduleStorage'\nimport { getSession } from '../../../features/auth/model/session'\n\nimport './styles.scss'\n\nexport const SchedulePage = () => {\n  const [data, setData] = useState([])\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [form] = Form.useForm()\n\n  const user = getSession()\n\n  // Антд-хук для определения брейкпоинтов\n  const breakpoints = Grid.useBreakpoint()\n  // Если ширина экрана меньше «md», считаем устройство мобильным\n  const isMobile = !breakpoints.md\n\n  useEffect(() => {\n    const scheduleData = getAllSchedule()\n    setData(scheduleData)\n  }, [])\n\n  const handleDelete = (id) => {\n    deleteScheduleEvent(id)\n    setData((prev) => prev.filter((item) => item.id !== id))\n  }\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true)\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n    form.resetFields()\n  }\n\n  const handleSave = () => {\n    form.validateFields().then((values) => {\n      const { date, time, room, courseId } = values\n\n      createScheduleEvent({\n        date: date.format('YYYY-MM-DD'),\n        time: time.format('HH:mm'),\n        room,\n        courseId,\n      })\n      setData(getAllSchedule())\n      handleCancel()\n    })\n  }\n\n  // Колонки таблицы для десктопной версии\n  const columns = [\n    {\n      title: 'Дата',\n      dataIndex: 'date',\n      key: 'date',\n    },\n    {\n      title: 'Время',\n      dataIndex: 'time',\n      key: 'time',\n    },\n    {\n      title: 'Аудитория',\n      dataIndex: 'room',\n      key: 'room',\n    },\n    {\n      title: 'ID курса',\n      dataIndex: 'courseId',\n      key: 'courseId',\n    },\n    {\n      title: 'Действие',\n      render: (_, record) =>\n        user?.role === 'teacher' && (\n          <Button danger onClick={() => handleDelete(record.id)}>\n            Удалить\n          </Button>\n        ),\n    },\n  ]\n\n  return (\n    <div className=\"schedule-page\">\n      <h2>Расписание</h2>\n\n      {user?.role === 'teacher' && (\n        <Button type=\"primary\" style={{ marginBottom: 16 }} onClick={handleOpenModal}>\n          Добавить занятие\n        </Button>\n      )}\n\n      {/* На мобильных экранах — список, на больших — таблица */}\n      {isMobile ? (\n        <List\n          dataSource={data}\n          rowKey=\"id\"\n          renderItem={(item) => (\n            <List.Item\n              actions={\n                user?.role === 'teacher'\n                  ? [\n                      <Button danger key=\"delete\" onClick={() => handleDelete(item.id)}>\n                        Удалить\n                      </Button>,\n                    ]\n                  : []\n              }\n            >\n              <List.Item.Meta\n                title={\n                  <div>\n                    <strong>Дата:</strong> {item.date}\n                    <div>\n                      <strong>Время:</strong> {item.time}\n                    </div>\n                  </div>\n                }\n                description={\n                  <div>\n                    <div>\n                      <strong>Аудитория:</strong> {item.room}\n                    </div>\n                    <div>\n                      <strong>ID курса:</strong> {item.courseId}\n                    </div>\n                  </div>\n                }\n              />\n            </List.Item>\n          )}\n        />\n      ) : (\n        <Table columns={columns} dataSource={data} rowKey=\"id\" scroll={{ x: true }} />\n      )}\n\n      <Modal\n        visible={isModalOpen}\n        title=\"Добавить занятие\"\n        onCancel={handleCancel}\n        onOk={handleSave}\n        // Пример, как можно отрендерить на всю ширину экрана для мобильной версии\n        // {...(isMobile && { width: \"100%\", style: { top: 0, margin: 0, padding: 0 } })}\n      >\n        <Form form={form} layout=\"vertical\">\n          <Form.Item label=\"Дата\" name=\"date\" rules={[{ required: true, message: 'Выберите дату' }]}>\n            <DatePicker format=\"YYYY-MM-DD\" style={{ width: '100%' }} />\n          </Form.Item>\n          <Form.Item label=\"Время\" name=\"time\" rules={[{ required: true, message: 'Выберите время' }]}>\n            <TimePicker format=\"HH:mm\" style={{ width: '100%' }} />\n          </Form.Item>\n          <Form.Item label=\"Аудитория\" name=\"room\" rules={[{ required: true, message: 'Введите аудиторию' }]}>\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"ID курса\" name=\"courseId\" rules={[{ required: true, message: 'Укажите ID курса' }]}>\n            <Input placeholder=\"Например, 1\" />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  )\n}\n"],"names":["SCHEDULE_KEY","initialSchedule","id","courseId","date","time","room","saveSchedule","scheduleList","localStorage","setItem","JSON","stringify","getAllSchedule","data","getItem","parse","e","console","error","createScheduleEvent","eventData","all","newId","String","Date","now","newEvent","_objectSpread","push","deleteScheduleEvent","filter","item","SchedulePage","setData","useState","isModalOpen","setIsModalOpen","form","Form","useForm","user","getSession","isMobile","Grid","useBreakpoint","md","useEffect","scheduleData","handleDelete","prev","handleCancel","resetFields","columns","title","dataIndex","key","render","_","record","role","_jsx","Button","danger","onClick","children","_jsxs","className","type","style","marginBottom","handleOpenModal","List","dataSource","rowKey","renderItem","Item","actions","Meta","description","Table","scroll","x","Modal","visible","onCancel","onOk","handleSave","validateFields","then","values","format","layout","label","name","rules","required","message","DatePicker","width","TimePicker","Input","placeholder"],"sourceRoot":""}