{"version":3,"file":"static/js/315.868c74b9.chunk.js","mappings":"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","sources":["entities/schedule/model/scheduleStorage.js","pages/SchedulePage/ui/SchedulePage.jsx"],"sourcesContent":["// entities/schedule/model/scheduleStorage.js\n\nconst SCHEDULE_KEY = \"schedule\";\n\n// Какие-то начальные данные (mock)\nconst initialSchedule = [\n    {\n        id: \"101\",\n        courseId: \"1\",      // курс Математика\n        date: \"2025-02-01\", // YYYY-MM-DD\n        time: \"10:00\",      // строка (HH:mm)\n        room: \"Аудитория 305\",\n    },\n    {\n        id: \"102\",\n        courseId: \"2\",      // курс Физика\n        date: \"2025-02-02\",\n        time: \"12:30\",\n        room: \"Лаборатория 2\",\n    },\n];\n\nfunction saveSchedule(scheduleList) {\n    localStorage.setItem(SCHEDULE_KEY, JSON.stringify(scheduleList));\n}\n\n// Получаем все события расписания\nexport function getAllSchedule() {\n    const data = localStorage.getItem(SCHEDULE_KEY);\n    if (!data) {\n        localStorage.setItem(SCHEDULE_KEY, JSON.stringify(initialSchedule));\n        return initialSchedule;\n    }\n    try {\n        return JSON.parse(data);\n    } catch (e) {\n        console.error(\"Ошибка парсинга schedule из localStorage\", e);\n        return [];\n    }\n}\n\n// Добавляем новое событие\nexport function createScheduleEvent(eventData) {\n    const all = getAllSchedule();\n    const newId = String(Date.now());\n    const newEvent = { id: newId, ...eventData };\n    all.push(newEvent);\n    saveSchedule(all);\n    return newEvent;\n}\n\n// Удаляем событие\nexport function deleteScheduleEvent(id) {\n    let all = getAllSchedule();\n    all = all.filter((item) => item.id !== id);\n    saveSchedule(all);\n}\n\n// Можно сделать updateScheduleEvent, если понадобится\n","// pages/SchedulePage/ui/SchedulePage.jsx\nimport React, { useEffect, useState } from \"react\";\nimport {\n    Table,\n    Button,\n    Modal,\n    Form,\n    Input,\n    DatePicker,\n    TimePicker,\n    List,\n    Grid\n} from \"antd\";\nimport {\n    createScheduleEvent,\n    getAllSchedule,\n    deleteScheduleEvent,\n} from \"../../../entities/schedule/model/scheduleStorage\";\nimport { getSession } from \"../../../features/auth/model/session\";\nimport \"./styles.scss\";\n\nexport const SchedulePage = () => {\n    const [data, setData] = useState([]);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [form] = Form.useForm();\n\n    const user = getSession();\n\n    // Антд-хук для определения брейкпоинтов\n    const breakpoints = Grid.useBreakpoint();\n    // Если ширина экрана меньше «md», считаем устройство мобильным\n    const isMobile = !breakpoints.md;\n\n    useEffect(() => {\n        const scheduleData = getAllSchedule();\n        setData(scheduleData);\n    }, []);\n\n    const handleDelete = (id) => {\n        deleteScheduleEvent(id);\n        setData((prev) => prev.filter((item) => item.id !== id));\n    };\n\n    const handleOpenModal = () => {\n        setIsModalOpen(true);\n    };\n\n    const handleCancel = () => {\n        setIsModalOpen(false);\n        form.resetFields();\n    };\n\n    const handleSave = () => {\n        form.validateFields().then((values) => {\n            const { date, time, room, courseId } = values;\n\n            createScheduleEvent({\n                date: date.format(\"YYYY-MM-DD\"),\n                time: time.format(\"HH:mm\"),\n                room,\n                courseId,\n            });\n            setData(getAllSchedule());\n            handleCancel();\n        });\n    };\n\n    // Колонки таблицы для десктопной версии\n    const columns = [\n        {\n            title: \"Дата\",\n            dataIndex: \"date\",\n            key: \"date\",\n        },\n        {\n            title: \"Время\",\n            dataIndex: \"time\",\n            key: \"time\",\n        },\n        {\n            title: \"Аудитория\",\n            dataIndex: \"room\",\n            key: \"room\",\n        },\n        {\n            title: \"ID курса\",\n            dataIndex: \"courseId\",\n            key: \"courseId\",\n        },\n        {\n            title: \"Действие\",\n            render: (_, record) =>\n              user?.role === \"teacher\" && (\n                <Button danger onClick={() => handleDelete(record.id)}>\n                    Удалить\n                </Button>\n              ),\n        },\n    ];\n\n    return (\n      <div className=\"schedule-page\">\n          <h2>Расписание</h2>\n\n          {user?.role === \"teacher\" && (\n            <Button type=\"primary\" style={{ marginBottom: 16 }} onClick={handleOpenModal}>\n                Добавить занятие\n            </Button>\n          )}\n\n          {/* На мобильных экранах — список, на больших — таблица */}\n          {isMobile ? (\n            <List\n              dataSource={data}\n              rowKey=\"id\"\n              renderItem={(item) => (\n                <List.Item\n                  actions={\n                      user?.role === \"teacher\"\n                        ? [\n                            <Button\n                              danger\n                              key=\"delete\"\n                              onClick={() => handleDelete(item.id)}\n                            >\n                                Удалить\n                            </Button>,\n                        ]\n                        : []\n                  }\n                >\n                    <List.Item.Meta\n                      title={\n                          <div>\n                              <strong>Дата:</strong> {item.date}\n                              <div>\n                                  <strong>Время:</strong> {item.time}\n                              </div>\n                          </div>\n                      }\n                      description={\n                          <div>\n                              <div>\n                                  <strong>Аудитория:</strong> {item.room}\n                              </div>\n                              <div>\n                                  <strong>ID курса:</strong> {item.courseId}\n                              </div>\n                          </div>\n                      }\n                    />\n                </List.Item>\n              )}\n            />\n          ) : (\n            <Table\n              columns={columns}\n              dataSource={data}\n              rowKey=\"id\"\n              scroll={{ x: true }}\n            />\n          )}\n\n          <Modal\n            visible={isModalOpen}\n            title=\"Добавить занятие\"\n            onCancel={handleCancel}\n            onOk={handleSave}\n            // Пример, как можно отрендерить на всю ширину экрана для мобильной версии\n            // {...(isMobile && { width: \"100%\", style: { top: 0, margin: 0, padding: 0 } })}\n          >\n              <Form form={form} layout=\"vertical\">\n                  <Form.Item\n                    label=\"Дата\"\n                    name=\"date\"\n                    rules={[{ required: true, message: \"Выберите дату\" }]}\n                  >\n                      <DatePicker format=\"YYYY-MM-DD\" style={{ width: \"100%\" }} />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Время\"\n                    name=\"time\"\n                    rules={[{ required: true, message: \"Выберите время\" }]}\n                  >\n                      <TimePicker format=\"HH:mm\" style={{ width: \"100%\" }} />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Аудитория\"\n                    name=\"room\"\n                    rules={[{ required: true, message: \"Введите аудиторию\" }]}\n                  >\n                      <Input />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"ID курса\"\n                    name=\"courseId\"\n                    rules={[{ required: true, message: \"Укажите ID курса\" }]}\n                  >\n                      <Input placeholder=\"Например, 1\" />\n                  </Form.Item>\n              </Form>\n          </Modal>\n      </div>\n    );\n};\n"],"names":["SCHEDULE_KEY","initialSchedule","id","courseId","date","time","room","saveSchedule","scheduleList","localStorage","setItem","JSON","stringify","getAllSchedule","data","getItem","parse","e","console","error","createScheduleEvent","eventData","all","newId","String","Date","now","newEvent","_objectSpread","push","deleteScheduleEvent","filter","item","SchedulePage","setData","useState","isModalOpen","setIsModalOpen","form","Form","useForm","user","getSession","isMobile","Grid","useBreakpoint","md","useEffect","scheduleData","handleDelete","prev","handleCancel","resetFields","columns","title","dataIndex","key","render","_","record","role","_jsx","Button","danger","onClick","children","_jsxs","className","type","style","marginBottom","handleOpenModal","List","dataSource","rowKey","renderItem","Item","actions","Meta","description","Table","scroll","x","Modal","visible","onCancel","onOk","handleSave","validateFields","then","values","format","layout","label","name","rules","required","message","DatePicker","width","TimePicker","Input","placeholder"],"sourceRoot":""}