{"version":3,"file":"static/js/805.c62531f5.chunk.js","mappings":"sOASO,MAAMA,EAAcA,KACzB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAG1BC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,IACxCG,GAAQC,EAAAA,EAAKC,UAWpB,IATAC,EAAAA,EAAAA,YAAU,KAGR,MAAMC,GAAcC,EAAAA,EAAAA,MAChBD,GACFR,EAAQQ,EACV,GACC,KAEET,EACH,OAAOW,EAAAA,EAAAA,KAAA,OAAAC,SAAK,wDAMd,MAMMC,EAAeA,KACnBT,GAAe,GACfC,EAAKS,aAAa,EAuBpB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,SAAU,KAAML,SAAA,EAC5BG,EAAAA,EAAAA,MAACG,EAAAA,EAAI,CAACC,MAAM,gEAAaP,SAAA,EACvBG,EAAAA,EAAAA,MAAA,KAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,oCAAU,IAAEZ,EAAKoB,aAEtBL,EAAAA,EAAAA,MAAA,KAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAG,8BAAS,IAAEZ,EAAKqB,QAIN,YAAdrB,EAAKqB,OACJV,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CAACC,KAAK,UAAUC,QA3CAC,KAC7BrB,GAAe,GACfC,EAAKS,aAAa,EAyC2CF,SAAC,oGAO5DD,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CACJP,MAAM,yIACNQ,KAAMxB,EACNyB,SAAUf,EACVgB,KAAMA,IAAMxB,EAAKyB,SAAUlB,UAE3BG,EAAAA,EAAAA,MAACT,EAAAA,EAAI,CAACD,KAAMA,EAAM0B,OAAO,WAAWC,SA5CdC,UAC1B,MAAM,SAAEb,EAAQ,SAAEc,GAAaC,EAC/B,UAGQC,EAAAA,GAAGC,WAAW,UAAUC,OAAO,CACnClB,WACAc,WACAK,gBAAiBL,EACjBb,KAAM,YAERmB,EAAAA,GAAaC,QAAQ,CAAEC,QAAS,gIAChC7B,GACF,CAAE,MAAO8B,GACPC,QAAQD,MAAM,6JAAiCA,GAC/CH,EAAAA,GAAaG,MAAM,CAAED,QAAS,uJAChC,GA4BsE9B,SAAA,EAChED,EAAAA,EAAAA,KAACL,EAAAA,EAAKuC,KAAI,CAACC,MAAM,kFAAiBC,KAAK,WAAWC,MAAO,CAAC,CAAEC,UAAU,EAAMP,QAAS,8EAAmB9B,UACtGD,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,OAERvC,EAAAA,EAAAA,KAACL,EAAAA,EAAKuC,KAAI,CAACC,MAAM,uCAASC,KAAK,WAAWC,MAAO,CAAC,CAAEC,UAAU,EAAMP,QAAS,oFAAoB9B,UAC/FD,EAAAA,EAAAA,KAACuC,EAAAA,EAAMC,SAAQ,aAIjB,C","sources":["pages/ProfilePage/ui/ProfilePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { Button, Card, Form, Input, Modal, notification } from 'antd'\n\nimport { getSession } from '../../../features/auth/model/session'\nimport { pb } from '../../../shared/config/pb'\n\n// наш клиент PocketBase\n\nexport const ProfilePage = () => {\n  const [user, setUser] = useState(null)\n\n  // --- Создание студента (только для преподавателя)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [form] = Form.useForm()\n\n  useEffect(() => {\n    // Получаем текущего авторизованного пользователя из localStorage\n    // (здесь user может содержать { id, username, role, token } и т.д.)\n    const sessionUser = getSession()\n    if (sessionUser) {\n      setUser(sessionUser)\n    }\n  }, [])\n\n  if (!user) {\n    return <div>Загрузка...</div>\n  }\n\n  // ---------------------------\n  // Открыть модалку \"Добавить студента\"\n  // ---------------------------\n  const openCreateStudentModal = () => {\n    setIsModalOpen(true)\n    form.resetFields()\n  }\n\n  // Закрытие модалки\n  const handleCancel = () => {\n    setIsModalOpen(false)\n    form.resetFields()\n  }\n\n  // Сабмит формы: создать студента в PocketBase\n  const handleCreateStudent = async (values) => {\n    const { username, password } = values\n    try {\n      // Создаём запись в вашей Auth Collection (назовём \"users2\")\n      // role = \"student\"\n      await pb.collection('users2').create({\n        username,\n        password,\n        passwordConfirm: password,\n        role: 'student',\n      })\n      notification.success({ message: 'Студент успешно создан!' })\n      handleCancel()\n    } catch (error) {\n      console.error('Ошибка при создании студента:', error)\n      notification.error({ message: 'Не удалось создать студента' })\n    }\n  }\n\n  return (\n    <div style={{ maxWidth: 600 }}>\n      <Card title=\"Мой профиль\">\n        <p>\n          <b>Логин:</b> {user.username}\n        </p>\n        <p>\n          <b>Роль:</b> {user.role}\n        </p>\n\n        {/* Кнопка \"Создать студента\" только для учителя */}\n        {user.role === 'teacher' && (\n          <Button type=\"primary\" onClick={openCreateStudentModal}>\n            Создать студента\n          </Button>\n        )}\n      </Card>\n\n      {/* Модальное окно для создания студента */}\n      <Modal\n        title=\"Создать аккаунт студента\"\n        open={isModalOpen}\n        onCancel={handleCancel}\n        onOk={() => form.submit()} // Тригерим сабмит формы\n      >\n        <Form form={form} layout=\"vertical\" onFinish={handleCreateStudent}>\n          <Form.Item label=\"Логин студента\" name=\"username\" rules={[{ required: true, message: 'Введите логин' }]}>\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Пароль\" name=\"password\" rules={[{ required: true, message: 'Введите пароль' }]}>\n            <Input.Password />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  )\n}\n"],"names":["ProfilePage","user","setUser","useState","isModalOpen","setIsModalOpen","form","Form","useForm","useEffect","sessionUser","getSession","_jsx","children","handleCancel","resetFields","_jsxs","style","maxWidth","Card","title","username","role","Button","type","onClick","openCreateStudentModal","Modal","open","onCancel","onOk","submit","layout","onFinish","async","password","values","pb","collection","create","passwordConfirm","notification","success","message","error","console","Item","label","name","rules","required","Input","Password"],"sourceRoot":""}