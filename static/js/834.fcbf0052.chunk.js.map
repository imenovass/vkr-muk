{"version":3,"file":"static/js/834.fcbf0052.chunk.js","mappings":"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","sources":["entities/material/model/materialStorage.js","pages/TeacherZonePage/ui/TeacherZonePage.jsx"],"sourcesContent":["\n\nconst MATERIALS_KEY = \"materials\";\n\n\nconst initialMaterials = [\n    {\n        id: \"1\",\n        courseId: \"1\",\n        title: \"Лекции по алгебре (PDF)\",\n        link: \"https://example.com/algebra.pdf\"\n    },\n    {\n        id: \"2\",\n        courseId: \"2\",       // курс \"Физика\"\n        title: \"Презентация по кинематике\",\n        link: \"https://example.com/kinematics.ppt\"\n    }\n];\n\nfunction saveAllMaterials(list) {\n    localStorage.setItem(MATERIALS_KEY, JSON.stringify(list));\n}\n\nexport function getAllMaterials() {\n    const data = localStorage.getItem(MATERIALS_KEY);\n    if (!data) {\n        localStorage.setItem(MATERIALS_KEY, JSON.stringify(initialMaterials));\n        return initialMaterials;\n    }\n    try {\n        return JSON.parse(data);\n    } catch (e) {\n        console.error(\"Ошибка парсинга materials\", e);\n        return [];\n    }\n}\n\nexport function createMaterial(materialData) {\n    const list = getAllMaterials();\n    const newId = String(Date.now());\n    const newMat = { id: newId, ...materialData };\n    list.push(newMat);\n    saveAllMaterials(list);\n    return newMat;\n}\n\nexport function deleteMaterial(id) {\n    let list = getAllMaterials();\n    list = list.filter((item) => item.id !== id);\n    saveAllMaterials(list);\n}\n\nexport function getMaterialsByCourse(courseId) {\n    const list = getAllMaterials();\n    return list.filter((item) => item.courseId === courseId);\n}\n","// pages/TeacherZonePage/ui/TeacherZonePage.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Button, Modal, Form, Input, Select } from \"antd\";\nimport { getSession } from \"../../../features/auth/model/session\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { getAllCourses } from \"../../../entities/course/model/courseStorage\";\nimport {\n    getAllMaterials,\n    createMaterial,\n    deleteMaterial,\n} from \"../../../entities/material/model/materialStorage\";\n\nconst { Option } = Select;\n\nexport const TeacherZonePage = () => {\n    const sessionUser = getSession();\n    const navigate = useNavigate();\n\n    // Если пользователь не teacher, перенаправим на главную\n    useEffect(() => {\n        if (!sessionUser || sessionUser.role !== \"teacher\") {\n            navigate(\"/\");\n        }\n    }, [sessionUser, navigate]);\n\n    const [materials, setMaterials] = useState([]);\n    const [courses, setCourses] = useState([]);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n        // Загрузим все материалы и курсы\n        const mat = getAllMaterials();\n        setMaterials(mat);\n\n        const c = getAllCourses();\n        setCourses(c);\n    }, []);\n\n    const columns = [\n        {\n            title: \"Название\",\n            dataIndex: \"title\",\n            key: \"title\",\n        },\n        {\n            title: \"Ссылка\",\n            dataIndex: \"link\",\n            key: \"link\",\n            render: (text) => (\n                <a href={text} target=\"_blank\" rel=\"noreferrer\">\n                    {text}\n                </a>\n            ),\n        },\n        {\n            title: \"ID курса\",\n            dataIndex: \"courseId\",\n            key: \"courseId\",\n        },\n        {\n            title: \"Действия\",\n            key: \"actions\",\n            render: (text, record) => (\n                <Button danger onClick={() => handleDelete(record.id)}>\n                    Удалить\n                </Button>\n            ),\n        },\n    ];\n\n    const handleDelete = (id) => {\n        deleteMaterial(id);\n        setMaterials((prev) => prev.filter((m) => m.id !== id));\n    };\n\n    // Открыть модал для добавления материала\n    const openModal = () => {\n        setIsModalOpen(true);\n    };\n\n    // Закрыть\n    const closeModal = () => {\n        setIsModalOpen(false);\n        form.resetFields();\n    };\n\n    // Сохранить\n    const handleSave = () => {\n        form.validateFields().then((values) => {\n            const { title, link, courseId } = values;\n            createMaterial({ title, link, courseId });\n            setMaterials(getAllMaterials());\n            closeModal();\n        });\n    };\n\n    return (\n        <div>\n            <h2>Teacher Zone: Управление материалами</h2>\n            <Button type=\"primary\" onClick={openModal} style={{ marginBottom: 16 }}>\n                Добавить материал\n            </Button>\n\n            <Table columns={columns} dataSource={materials} rowKey=\"id\" />\n\n            <Modal\n                title=\"Добавить материал\"\n                visible={isModalOpen}\n                onCancel={closeModal}\n                onOk={handleSave}\n            >\n                <Form form={form} layout=\"vertical\">\n                    <Form.Item\n                        label=\"Название\"\n                        name=\"title\"\n                        rules={[{ required: true, message: \"Введите название\" }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Ссылка\"\n                        name=\"link\"\n                        rules={[{ required: true, message: \"Введите ссылку\" }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Курс\"\n                        name=\"courseId\"\n                        rules={[{ required: true, message: \"Выберите курс\" }]}\n                    >\n                        <Select placeholder=\"Выберите курс\">\n                            {courses.map((c) => (\n                                <Option key={c.id} value={c.id}>\n                                    {c.title} (ID {c.id})\n                                </Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </div>\n    );\n};\n"],"names":["MATERIALS_KEY","initialMaterials","id","courseId","title","link","saveAllMaterials","list","localStorage","setItem","JSON","stringify","getAllMaterials","data","getItem","parse","e","console","error","Option","Select","TeacherZonePage","sessionUser","getSession","navigate","useNavigate","useEffect","role","materials","setMaterials","useState","courses","setCourses","isModalOpen","setIsModalOpen","form","Form","useForm","mat","c","getAllCourses","columns","dataIndex","key","render","text","_jsx","href","target","rel","children","record","Button","danger","onClick","handleDelete","filter","item","deleteMaterial","prev","m","closeModal","resetFields","_jsxs","type","openModal","style","marginBottom","Table","dataSource","rowKey","Modal","visible","onCancel","onOk","handleSave","validateFields","then","values","materialData","newId","String","Date","now","newMat","_objectSpread","push","createMaterial","layout","Item","label","name","rules","required","message","Input","placeholder","map","value"],"sourceRoot":""}