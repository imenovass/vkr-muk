{"version":3,"file":"static/js/669.bb8356ec.chunk.js","mappings":"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","sources":["entities/schedule/model/scheduleStorage.js","pages/SchedulePage/ui/SchedulePage.jsx"],"sourcesContent":["// entities/schedule/model/scheduleStorage.js\n\nconst SCHEDULE_KEY = \"schedule\";\n\n// Какие-то начальные данные (mock)\nconst initialSchedule = [\n    {\n        id: \"101\",\n        courseId: \"1\",      // курс Математика\n        date: \"2025-02-01\", // YYYY-MM-DD\n        time: \"10:00\",      // строка (HH:mm)\n        room: \"Аудитория 305\",\n    },\n    {\n        id: \"102\",\n        courseId: \"2\",      // курс Физика\n        date: \"2025-02-02\",\n        time: \"12:30\",\n        room: \"Лаборатория 2\",\n    },\n];\n\nfunction saveSchedule(scheduleList) {\n    localStorage.setItem(SCHEDULE_KEY, JSON.stringify(scheduleList));\n}\n\n// Получаем все события расписания\nexport function getAllSchedule() {\n    const data = localStorage.getItem(SCHEDULE_KEY);\n    if (!data) {\n        localStorage.setItem(SCHEDULE_KEY, JSON.stringify(initialSchedule));\n        return initialSchedule;\n    }\n    try {\n        return JSON.parse(data);\n    } catch (e) {\n        console.error(\"Ошибка парсинга schedule из localStorage\", e);\n        return [];\n    }\n}\n\n// Добавляем новое событие\nexport function createScheduleEvent(eventData) {\n    const all = getAllSchedule();\n    const newId = String(Date.now());\n    const newEvent = { id: newId, ...eventData };\n    all.push(newEvent);\n    saveSchedule(all);\n    return newEvent;\n}\n\n// Удаляем событие\nexport function deleteScheduleEvent(id) {\n    let all = getAllSchedule();\n    all = all.filter((item) => item.id !== id);\n    saveSchedule(all);\n}\n\n// Можно сделать updateScheduleEvent, если понадобится\n","// pages/SchedulePage/ui/SchedulePage.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Button, Modal, Form, Input, DatePicker, TimePicker } from \"antd\";\nimport { createScheduleEvent, getAllSchedule, deleteScheduleEvent } from \"../../../entities/schedule/model/scheduleStorage\";\nimport { getAllCourses } from \"../../../entities/course/model/courseStorage\";\nimport { getSession } from \"../../../features/auth/model/session\";\n\n\nexport const SchedulePage = () => {\n    const [data, setData] = useState([]);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [form] = Form.useForm();\n\n    const user = getSession();\n\n    useEffect(() => {\n        const scheduleData = getAllSchedule();\n        setData(scheduleData);\n    }, []);\n\n    const columns = [\n        {\n            title: \"Дата\",\n            dataIndex: \"date\",\n            key: \"date\",\n        },\n        {\n            title: \"Время\",\n            dataIndex: \"time\",\n            key: \"time\",\n        },\n        {\n            title: \"Аудитория\",\n            dataIndex: \"room\",\n            key: \"room\",\n        },\n        {\n            title: \"ID курса\",\n            dataIndex: \"courseId\",\n            key: \"courseId\",\n        },\n        {\n            title: \"Действие\",\n            render: (text, record) => (\n                user?.role === \"teacher\" && (\n                    <Button danger onClick={() => handleDelete(record.id)}>\n                        Удалить\n                    </Button>\n                )\n            ),\n        },\n    ];\n\n    const handleDelete = (id) => {\n        deleteScheduleEvent(id);\n        setData((prev) => prev.filter((item) => item.id !== id));\n    };\n\n    const handleOpenModal = () => {\n        setIsModalOpen(true);\n    };\n\n    const handleCancel = () => {\n        setIsModalOpen(false);\n        form.resetFields();\n    };\n\n    const handleSave = () => {\n        form.validateFields().then((values) => {\n            const { date, time, room, courseId } = values;\n\n            createScheduleEvent({\n                date: date.format(\"YYYY-MM-DD\"),\n                time: time.format(\"HH:mm\"),\n                room,\n                courseId,\n            });\n            setData(getAllSchedule());\n            handleCancel();\n        });\n    };\n\n    return (\n        <div>\n            <h2>Расписание</h2>\n            {user?.role === \"teacher\" && (\n                <Button type=\"primary\" style={{ marginBottom: 16 }} onClick={handleOpenModal}>\n                    Добавить занятие\n                </Button>\n            )}\n\n            <Table columns={columns} dataSource={data} rowKey=\"id\" />\n\n            <Modal\n                visible={isModalOpen}\n                title=\"Добавить занятие\"\n                onCancel={handleCancel}\n                onOk={handleSave}\n            >\n                <Form form={form} layout=\"vertical\">\n                    <Form.Item\n                        label=\"Дата\"\n                        name=\"date\"\n                        rules={[{ required: true, message: \"Выберите дату\" }]}\n                    >\n                        <DatePicker format=\"YYYY-MM-DD\" style={{ width: \"100%\" }} />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Время\"\n                        name=\"time\"\n                        rules={[{ required: true, message: \"Выберите время\" }]}\n                    >\n                        <TimePicker format=\"HH:mm\" style={{ width: \"100%\" }} />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Аудитория\"\n                        name=\"room\"\n                        rules={[{ required: true, message: \"Введите аудиторию\" }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"ID курса\"\n                        name=\"courseId\"\n                        rules={[{ required: true, message: \"Укажите ID курса\" }]}\n                    >\n                        <Input placeholder=\"Например, 1\" />\n                        {/* Можно вместо обычного Input сделать Select, подгрузив getAllCourses() */}\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </div>\n    );\n};\n"],"names":["SCHEDULE_KEY","initialSchedule","id","courseId","date","time","room","saveSchedule","scheduleList","localStorage","setItem","JSON","stringify","getAllSchedule","data","getItem","parse","e","console","error","createScheduleEvent","eventData","all","newId","String","Date","now","newEvent","_objectSpread","push","deleteScheduleEvent","filter","item","SchedulePage","setData","useState","isModalOpen","setIsModalOpen","form","Form","useForm","user","getSession","useEffect","scheduleData","columns","title","dataIndex","key","render","text","record","role","_jsx","Button","danger","onClick","handleDelete","children","prev","handleCancel","resetFields","_jsxs","type","style","marginBottom","handleOpenModal","Table","dataSource","rowKey","Modal","visible","onCancel","onOk","handleSave","validateFields","then","values","format","layout","Item","label","name","rules","required","message","DatePicker","width","TimePicker","Input","placeholder"],"sourceRoot":""}